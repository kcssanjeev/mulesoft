<?xml version='1.0' encoding='utf-8'?>
<configuration>
	<placeholders>
		<placeholder id="template_name">SAP to Workday Organization Broadcast</placeholder>
	</placeholders>
	<sections>
		<section id="use_case">
This Anypoint template serves as a foundation for setting an online sync of Organizations from SAP to Workday. Every time there is a new organization or a change in an already existing one, SAP will send the IDoc with it to the running template which will create/update an organization in Workday target instance. Requirements have been set not only to be used as examples, but also to establish a starting point to adapt your integration to your requirements. As implemented, this template leverages the Mule batch module.	The batch job is divided in Input, Process and On Complete stages. The integration is triggered by a SAP Endpoint that receives the SAP	Organization as IDoc XML. This XML is passed to the batch process. The batch process handle the migration to Workday.
	</section>
		<section id="considerations">
		
To make this template run, there are certain preconditions that must be considered.
All of them deal with the preparations in both source (SAP) and destination (WDAY) systems, that must be made for the template to run smoothly.
**Failing to do so could lead to unexpected behavior of the template.**

Before continue with the use of this template, you may want to check out this [Documentation Page](http://www.mulesoft.org/documentation/display/current/SAP+Connector#SAPConnector-EnablingYourStudioProjectforSAP), that will teach you how to work 
with SAP and Anypoint Studio.

## Disclaimer

This Anypoint template uses a few private Maven dependencies in order to work. If you intend to run this template with Maven support, please continue reading.

You will find that there are three dependencies in the pom.xml file that begin with the following group id: 
	**com.sap.conn.jco** 
These dependencies are private for Mulesoft and will cause you application not to build from a Maven command line. You need to replace them with "provided" scope and copy the libraries into the build path.

		</section>
		<section id="sap_src">

The Partner profile needs to have a customized type of logical system set as partner type. An outbound parameter of message type HRMD\_ABA should be defined in the partner profile. A RFC destination created earlier should be defined as Receiver Port. Idoc Type base type should be set as HRMD\_ABA01.

		</section>
		<section id="wday_dst">
		
		
This template makes use of the `External ID` by Workday.

The templates uses the External ID in order to do xRef between the entities in both systems. The idea is, once an entity is created in WDAY it's decorated with an ID from the source system which will be used afteward for the template to reference it.

		</section>
		<section id="running_on_studio">
		
In order to make this template run on Mule Studio there are a few extra steps that needs to be made.
Please check this Documentation Page:

+ [Enabling Your Studio Project for SAP](http://www.mulesoft.org/documentation/display/current/SAP+Connector#SAPConnector-EnablingYourStudioProjectforSAP)
		
		</section>
		<section id="application_configuration">
		
**SAP Connector Configuration**

+ sap.jco.ashost `your.sap.address.com`
+ sap.jco.user `SAP_USER`
+ sap.jco.passwd `SAP_PASS`
+ sap.jco.sysnr `14`
+ sap.jco.client `800`
+ sap.jco.lang `EN`

**SAP Endpoint Configuration**

+ sap.jco.operationtimeout `1000`
+ sap.jco.connectioncount `2`
+ sap.jco.gwhost `your.sap.addres.com`
+ sap.jco.gwservice `sapgw14`
+ sap.jco.idoc.programid `PROGRAM_ID`

**Workday Connector Configuration**

+ wday.username `user`
+ wday.tenant `tenant_pt5t`
+ wday.password `secret`
+ wday.host `services.wday.com`
+ wday.org.subtype `Company`
+ wday.org.visibility `Everyone`
+ wday.ext.systemID `systemID`


		</section>
		<section id="api_calls">
			There are no special considerations regarding API calls.  
		</section>
		<section id="endpoints.xml">
		
This file should contain every inbound endpoint of your integration app. It is intended to contain the application API.
In this particular template, this file contains an IDoc SAP inbound endpoint that listening SAP for updates on Organization units.

		</section>
		<section id="businessLogic.xml">
		
This file holds the functional aspect of the template. Its main component is a *Batch job*, and it includes *steps* for executing the broadcast operation from SAP to Workday.
In the Batch Input stage the SAP Organizations are transformed to a collection of maps. The Input stage filters out Employees structures from SAP which are using the same IDoc listener structure. Maps contain data which are used to create or update Workday Organization. This template migrate just organization in language, which is configured in **sap.jco.lang** property. Other organizations are ignored.
Finally during the On Complete stage the template logs output statistics data into the console.

		</section>
	</sections>
</configuration>